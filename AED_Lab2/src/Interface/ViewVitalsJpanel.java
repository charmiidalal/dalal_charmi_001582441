/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;
/* Import VitalSignHistory Package */
import Business.VitalSignHistory;

/* Import VitalSigns Package */
import Business.VitalSigns;

/* Import JOptionPane Package for Dialogue boxes */
import javax.swing.JOptionPane;

/* Import DefaultTableModel Package for JTable*/
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author manushpatel
 */
public class ViewVitalsJpanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewVitalsJpanel
     */
    
    /* Declare VitalSignHistory variable */
    private VitalSignHistory vsh;
    ViewVitalsJpanel(VitalSignHistory vsh) {
        initComponents();
        /* Initialize and set VitalSignHistory variable */
        this.vsh = vsh;
        /* As soon as the View VitalSignHistory button is clicked we need to to 
        populate all vital signs available */
        populateTable();
    }
    
    public void populateTable(){
        /* Create object of DefaultTableModeland  add all objects of vital signs into it */
        DefaultTableModel dtm = (DefaultTableModel)vitalSignTabel.getModel();
        dtm.setRowCount(0);
        for(VitalSigns vs : vsh.getVitalSignHistory()){
            Object row[] = new Object[2];
            row[0] = vs;
            row[1] = vs.getBloodPressure();
            dtm.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewVitalSignsLabel = new javax.swing.JLabel();
        viewVitalSignPane = new javax.swing.JScrollPane();
        vitalSignTabel = new javax.swing.JTable();
        viewDetailsLabel = new javax.swing.JButton();
        deleteLabel = new javax.swing.JButton();
        dateLabel = new javax.swing.JLabel();
        temperatureTextbox = new javax.swing.JTextField();
        bloodPressureTextbox = new javax.swing.JTextField();
        dateTextbox = new javax.swing.JTextField();
        pulseTextbox = new javax.swing.JTextField();
        temperatureLabel = new javax.swing.JLabel();
        bloodPressureLabel = new javax.swing.JLabel();
        pulseLabel = new javax.swing.JLabel();

        viewVitalSignsLabel.setText("View Vital Signs");

        vitalSignTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Blood Pressure"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        viewVitalSignPane.setViewportView(vitalSignTabel);

        viewDetailsLabel.setText("View Details");
        viewDetailsLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsLabelActionPerformed(evt);
            }
        });

        deleteLabel.setText("Delete");
        deleteLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteLabelActionPerformed(evt);
            }
        });

        dateLabel.setText("Date:");

        temperatureTextbox.setEditable(false);

        bloodPressureTextbox.setEditable(false);

        dateTextbox.setEditable(false);
        dateTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTextboxActionPerformed(evt);
            }
        });

        pulseTextbox.setEditable(false);
        pulseTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pulseTextboxActionPerformed(evt);
            }
        });

        temperatureLabel.setText("Temperature:");

        bloodPressureLabel.setText("Blood Pressure:");

        pulseLabel.setText("Pulse:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(viewVitalSignsLabel))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(330, 330, 330)
                            .addComponent(viewDetailsLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteLabel))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(108, 108, 108)
                            .addComponent(viewVitalSignPane, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pulseLabel)
                                    .addComponent(dateLabel)
                                    .addComponent(temperatureLabel))
                                .addGap(31, 31, 31))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(bloodPressureLabel)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pulseTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bloodPressureTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(temperatureTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(viewVitalSignsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewVitalSignPane, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewDetailsLabel)
                    .addComponent(deleteLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(temperatureTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(temperatureLabel))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodPressureTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloodPressureLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pulseLabel)
                    .addComponent(pulseTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(dateTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pulseTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pulseTextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pulseTextboxActionPerformed

    private void viewDetailsLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsLabelActionPerformed
        // TODO add your handling code here:
        /* Onclick of ViewDetails fetch values from its oobject and populate it 
        into readonly textboxes*/
        int selectedrow = vitalSignTabel.getSelectedRow();
        /* If row is selected then only fetch data from array otherwise show 
        message to select row */
        if(selectedrow >= 0){
            VitalSigns vs = (VitalSigns)vitalSignTabel.getValueAt(selectedrow, 0);
            bloodPressureTextbox.setText(String.valueOf(vs.getBloodPressure()));
            temperatureTextbox.setText(String.valueOf(vs.getTemperature()));
            pulseTextbox.setText(String.valueOf(vs.getPulse()));
            dateTextbox.setText(vs.getDate());
        }else{
            JOptionPane.showMessageDialog(null, "Please Select Row!");
        }
    }//GEN-LAST:event_viewDetailsLabelActionPerformed

    private void deleteLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteLabelActionPerformed
        // TODO add your handling code here:
        /* If row is selected then only delete data from array otherwise show 
        message to select row */
        int selectedrow = vitalSignTabel.getSelectedRow();
        if(selectedrow >= 0){
            int response = JOptionPane.showConfirmDialog(null, "Are you sure want to delete this vital sign?");
            if(response == 0){
                VitalSigns vs = (VitalSigns)vitalSignTabel.getValueAt(selectedrow, 0);
                vsh.deleteVitals(vs);
                JOptionPane.showMessageDialog(null, "Vital Sign has been deleted.");
            }
            /* After deleting the sign empty all textboxes and populate the table
            again*/
            bloodPressureTextbox.setText("");
            temperatureTextbox.setText("");
            pulseTextbox.setText("");
            dateTextbox.setText("");
            populateTable();
        }else{
            JOptionPane.showMessageDialog(null, "Please Select Row!");
        }
    }//GEN-LAST:event_deleteLabelActionPerformed

    private void dateTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateTextboxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bloodPressureLabel;
    private javax.swing.JTextField bloodPressureTextbox;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField dateTextbox;
    private javax.swing.JButton deleteLabel;
    private javax.swing.JLabel pulseLabel;
    private javax.swing.JTextField pulseTextbox;
    private javax.swing.JLabel temperatureLabel;
    private javax.swing.JTextField temperatureTextbox;
    private javax.swing.JButton viewDetailsLabel;
    private javax.swing.JScrollPane viewVitalSignPane;
    private javax.swing.JLabel viewVitalSignsLabel;
    private javax.swing.JTable vitalSignTabel;
    // End of variables declaration//GEN-END:variables
}
