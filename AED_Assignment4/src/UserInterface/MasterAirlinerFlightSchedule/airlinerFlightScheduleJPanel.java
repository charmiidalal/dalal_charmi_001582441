/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.MasterAirlinerFlightSchedule;

import Business.Flight;
import Business.FlightDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anusha
 */
public class airlinerFlightScheduleJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageAirlinerFlightScheduleJPanel
     */
    private final JPanel cardLayoutJPanel;
    private final FlightDirectory fd;
    private final String airlinerName;

    public airlinerFlightScheduleJPanel(JPanel cardLayoutJPanel, FlightDirectory fd, String airlinerName) {
        initComponents();
        this.fd = fd;
        this.airlinerName = airlinerName;
        this.cardLayoutJPanel = cardLayoutJPanel;
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) flightTbl.getModel();
        dtm.setRowCount(0);

        for (Flight flight : fd.getFlightDir()) {
            if (flight.getFlightOwner().equals(airlinerName)) {
                Object[] flightOwner = new Object[dtm.getColumnCount()];
                flightOwner[0] = flight.getFlightOwner();
                flightOwner[1] = flight.getFlightNumber();
                flightOwner[2] = flight.getFlightSource();
                flightOwner[3] = flight.getFlightDestination();
                flightOwner[4] = flight.getFlightDepTime();
                flightOwner[5] = flight.getFlightArrTime();
                flightOwner[6] = flight.getFlightDuration();
                flightOwner[7] = flight.getFlightDate();
                flightOwner[8] = flight.getFlightTimePhase();
                dtm.addRow(flightOwner);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        flightTbl = new javax.swing.JTable();
        createScheduleBtn = new javax.swing.JButton();
        viewScheduleBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 204, 255));

        flightTbl.setBackground(new java.awt.Color(255, 204, 102));
        flightTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Airliner", "Flight Number", "Source", "Destination", "Departure Time", "Arrival Time", "Duration", "Date", "Time of day"
            }
        ));
        jScrollPane1.setViewportView(flightTbl);

        createScheduleBtn.setBackground(new java.awt.Color(204, 204, 204));
        createScheduleBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        createScheduleBtn.setText("Create Schedule");
        createScheduleBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), null));
        createScheduleBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        createScheduleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createScheduleBtnActionPerformed(evt);
            }
        });

        viewScheduleBtn.setBackground(new java.awt.Color(204, 204, 204));
        viewScheduleBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewScheduleBtn.setText("View Schedule");
        viewScheduleBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), null));
        viewScheduleBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        viewScheduleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewScheduleBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("              Manage Flight Schedule ");

        deleteBtn.setBackground(new java.awt.Color(204, 204, 204));
        deleteBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteBtn.setText("Delete Schedule");
        deleteBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), null));
        deleteBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(createScheduleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(182, 182, 182)
                                .addComponent(viewScheduleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(186, 186, 186)
                                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewScheduleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createScheduleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(212, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createScheduleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createScheduleBtnActionPerformed
        // TODO add your handling code here:
        CreateFlightScheduleJPanel panel = new CreateFlightScheduleJPanel(cardLayoutJPanel, fd, airlinerName);
        cardLayoutJPanel.add("CreateFlightScheduleJPanel", panel);
        CardLayout layout = (CardLayout) cardLayoutJPanel.getLayout();
        layout.next(cardLayoutJPanel);
    }//GEN-LAST:event_createScheduleBtnActionPerformed

    private void viewScheduleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewScheduleBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = flightTbl.getSelectedRow();
        int c =0;
        if (selectedRow > -1) {
//            FlightDirectory fd1 = new FlightDirectory();
            Flight f1 = new Flight();
            for (Flight flight : fd.getFlightDir()) {
                
            if (flight.getFlightOwner().equals(airlinerName)) {
                
                if(c == selectedRow)
                {
                    f1 = flight;
                    break;
                }
                c +=1;
            }
        }
          

            ViewFlightScheduleJPanel panel = new ViewFlightScheduleJPanel(cardLayoutJPanel, f1, fd);
            cardLayoutJPanel.add("ViewFlightScheduleJPanel", panel);
            CardLayout layout = (CardLayout) cardLayoutJPanel.getLayout();
            layout.next(cardLayoutJPanel);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row above");
            return;
        }
    }//GEN-LAST:event_viewScheduleBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = flightTbl.getSelectedRow();
        if (selectedRow > -1) {
            Flight f = fd.getFlightDir().get(selectedRow);
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete?", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                fd.getFlightDir().remove(f);
            }

            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row above");
            return;
        }

    }//GEN-LAST:event_deleteBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createScheduleBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTable flightTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewScheduleBtn;
    // End of variables declaration//GEN-END:variables
}
