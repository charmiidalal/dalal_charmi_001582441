/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.MasterAirlinerFlightSchedule;

import Business.Flight;
import Business.FlightDirectory;
import Business.Seats;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Charmi Dalal
 */
public class CreateFlightScheduleJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateFlightScheduleJPanel
     */
    private final JPanel cardLayoutJPanel;
    private final FlightDirectory flightDir;

    public CreateFlightScheduleJPanel(JPanel cardLayoutJPanel, FlightDirectory flightDir, String airlinerName) {
        initComponents();
        airlinerTxt.setText(airlinerName);
        this.cardLayoutJPanel = cardLayoutJPanel;
        this.flightDir = flightDir;
        timeCB.setSelectedItem("Select Option");
    }
    
    /* Empty all the textboxes after search */
    public void emptyInputFields() {
        airlinerTxt.setText("");
        flightNumTxt.setText("");
        sourceTxt.setText("");
        destinationTxt.setText("");
        departureTimeTxt.setText("");
        arrivalTimeTxt.setText("");
        durationTxt.setText("");
        dateTxt.setText("");
        timeCB.setSelectedItem("Select Option");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        airlinerTxt = new javax.swing.JTextField();
        flightNumTxt = new javax.swing.JTextField();
        sourceTxt = new javax.swing.JTextField();
        destinationTxt = new javax.swing.JTextField();
        departureTimeTxt = new javax.swing.JTextField();
        arrivalTimeTxt = new javax.swing.JTextField();
        durationTxt = new javax.swing.JTextField();
        dateTxt = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        timeCB = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(153, 204, 255));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Create Flight Schedule");

        jLabel2.setText("Air Liner");

        jLabel3.setText("Flight Number");

        jLabel4.setText("Source");

        jLabel5.setText("Destination");

        jLabel6.setText("Departure Time");

        jLabel7.setText("Arrival Time");

        jLabel8.setText("Duration");

        jLabel9.setText("Date (dd-mm-yyyy)");

        airlinerTxt.setBackground(new java.awt.Color(255, 204, 102));
        airlinerTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), null));
        airlinerTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        airlinerTxt.setEnabled(false);
        airlinerTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                airlinerTxtActionPerformed(evt);
            }
        });

        flightNumTxt.setBackground(new java.awt.Color(255, 204, 102));
        flightNumTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), null));
        flightNumTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        flightNumTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightNumTxtActionPerformed(evt);
            }
        });

        sourceTxt.setBackground(new java.awt.Color(255, 204, 102));
        sourceTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), null));
        sourceTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        sourceTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceTxtActionPerformed(evt);
            }
        });

        destinationTxt.setBackground(new java.awt.Color(255, 204, 102));
        destinationTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), null));
        destinationTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        departureTimeTxt.setBackground(new java.awt.Color(255, 204, 102));
        departureTimeTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), null));
        departureTimeTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        arrivalTimeTxt.setBackground(new java.awt.Color(255, 204, 102));
        arrivalTimeTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), null));
        arrivalTimeTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        durationTxt.setBackground(new java.awt.Color(255, 204, 102));
        durationTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), null));
        durationTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        durationTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationTxtActionPerformed(evt);
            }
        });

        dateTxt.setBackground(new java.awt.Color(255, 204, 102));
        dateTxt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), null));
        dateTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        btnCreate.setBackground(new java.awt.Color(255, 204, 102));
        btnCreate.setText("Create");
        btnCreate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), null));
        btnCreate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        jLabel11.setText("Operated Time of Day");

        btnBack.setBackground(new java.awt.Color(255, 204, 102));
        btnBack.setText("Back");
        btnBack.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), null));
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        timeCB.setBackground(new java.awt.Color(255, 204, 102));
        timeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Option", "Morning", "Afternoon", "Evening", "Night" }));
        timeCB.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 204), null));
        timeCB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(376, 376, 376)
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(341, 341, 341)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))
                        .addGap(204, 204, 204)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(airlinerTxt)
                                .addComponent(flightNumTxt)
                                .addComponent(sourceTxt)
                                .addComponent(destinationTxt)
                                .addComponent(departureTimeTxt)
                                .addComponent(arrivalTimeTxt)
                                .addComponent(durationTxt)
                                .addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(347, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(airlinerTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(flightNumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(sourceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(destinationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(departureTimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7))
                    .addComponent(arrivalTimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(durationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(timeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        if (airlinerTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Airliner");
            return;
        }
        if (flightNumTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter FlightNumber");
            return;
        }

        if (sourceTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Source");
            return;
        }
        if (destinationTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Destination");
            return;
        }

        if (arrivalTimeTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter arrival Time in HH:MM");
            return;
        } else {
            Pattern p = Pattern.compile("^(0[0-9]|1[0-9]|2[0-3]|[0-9]):[0-5][0-9]$");
            Matcher m = p.matcher(arrivalTimeTxt.getText());
            boolean b = m.matches();
            if (!b) {
                JOptionPane.showMessageDialog(null, "Please Enter arrival Time in HH:MM");
                return;
            }
        }
        if (departureTimeTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Departure Time in HH:MM");
            return;
        } else {
            Pattern p = Pattern.compile("^(0[0-9]|1[0-9]|2[0-3]|[0-9]):[0-5][0-9]$");
            Matcher m = p.matcher(arrivalTimeTxt.getText());
            boolean b = m.matches();
            if (!b) {
                JOptionPane.showMessageDialog(null, "Please Enter departure Time in HH:MM");
                return;
            }
        }

        if (flightNumTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Flight Number");
            return;
        }
        if (dateTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Date");

            return;
        }

        if (sourceTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Source");
            return;
        }
        if (destinationTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Destination");
            return;
        }

        try {
            Integer.parseInt(durationTxt.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please Enter valid duartion");
            return;
        }
        if ("".equals(timeCB.getSelectedItem().equals("Select Option"))) {
            JOptionPane.showMessageDialog(null, "Please Enter Code");
            return;
        }

        if (timeCB.getSelectedItem().equals("Select Option")) {
            JOptionPane.showMessageDialog(null, "Please select an option below");
            return;
        }

        Flight ff = new Flight();
        ff.setFlightOwner(airlinerTxt.getText());
        ff.setFlightNumber(flightNumTxt.getText());
        ff.setFlightSource(sourceTxt.getText());
        ff.setFlightDestination(destinationTxt.getText());
        ff.setFlightDepTime(departureTimeTxt.getText());
        ff.setFlightArrTime(arrivalTimeTxt.getText());
        ff.setFlightDuration((int) Double.parseDouble(durationTxt.getText()));

        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
        String dateInString = dateTxt.getText();

        try {
            Date date = formatter.parse(dateInString);
            ff.setFlightDate(date);

        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Please enter date in dd-MM-yyyy format");
            return;
        }

        Seats seat = new Seats();
        ff.setFlightSeats(seat);
        ff.setFlightTimePhase(timeCB.getSelectedItem().toString());
        flightDir.addFlight(ff);
        JOptionPane.showMessageDialog(null, "Flight Created Successfully");
        emptyInputFields();
    }//GEN-LAST:event_btnCreateActionPerformed

    private void airlinerTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_airlinerTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_airlinerTxtActionPerformed

    private void flightNumTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightNumTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_flightNumTxtActionPerformed

    private void sourceTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sourceTxtActionPerformed

    private void durationTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durationTxtActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        cardLayoutJPanel.remove(this);
        CardLayout layout = (CardLayout) cardLayoutJPanel.getLayout();

        Component[] cc = cardLayoutJPanel.getComponents();
        for (Component c : cc) {
            if (c instanceof airlinerFlightScheduleJPanel) {
                airlinerFlightScheduleJPanel afs = (airlinerFlightScheduleJPanel) c;
                afs.populateTable();
            }
        }

        layout.previous(cardLayoutJPanel);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField airlinerTxt;
    private javax.swing.JTextField arrivalTimeTxt;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JTextField dateTxt;
    private javax.swing.JTextField departureTimeTxt;
    private javax.swing.JTextField destinationTxt;
    private javax.swing.JTextField durationTxt;
    private javax.swing.JTextField flightNumTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField sourceTxt;
    private javax.swing.JComboBox<String> timeCB;
    // End of variables declaration//GEN-END:variables
}
